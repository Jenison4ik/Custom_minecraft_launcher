user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    # Дополнительные настройки для безопасности и оптимизации
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    # Настройки gzip
    gzip on;
    gzip_types text/plain application/xml application/json text/css application/javascript;
    gzip_min_length 1000;
    gzip_vary on;

    client_max_body_size 5G;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Redirect с www → без www
    server {
        listen 80;
        server_name www.${DOMAIN};

        return 301 $scheme://${DOMAIN} $request_uri;
    }

    # HTTP сервер для Certbot (чтобы выдавал SSL)
    server {
        listen 80;
        server_name ${DOMAIN};


        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }

        # Прокси на Node.js для теста HTTP (опционально)
        location / {
            proxy_pass http://app:${PORT};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # HTTPS сервер
    # Пока закомментирован до получения сертификата
    server {
        listen 443 ssl;
        server_name ${DOMAIN};

        # Запретить индексацию всем роботам
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
    
        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
    
        location / {
            root /app/server_app/static; 
            index index.html index.htm;

            try_files $uri $uri/ @node;
        }
        location @node {
            proxy_pass http://app:${PORT};    # Прокси на Node.js контейнер
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /robots.txt {
            root /app/server_app/static;  # отдельная папка для этого файла
            try_files /robots.txt =404;
            allow all;
            log_not_found off;
            access_log off;
        }
    }
}
