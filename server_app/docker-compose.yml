version: "3.9"  # Версия Docker Compose, 3.9 — современная и поддерживает все нужные возможности

services:
  app:
    build: .
    container_name: server_app
    restart: always
    env_file:
      - .env          # Подключаем переменные окружения из файла .env
    environment:
      - PORT=${PORT}
      - SECRET_KEY=${SECRET_KEY}
    expose:
      - "${PORT}" 
    networks:
      - webnet

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"       # HTTP для первоначальной выдачи сертификата
      - "443:443"     # HTTPS
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      #- ./nginx/nginx.conf:/etc/nginx/nginx.conf   # Конфигурация Nginx
      - ./nginx/certbot/conf:/etc/letsencrypt  # Сертификаты Let's Encrypt
      - ./nginx/certbot/www:/var/www/certbot   # Временная папка для проверки домена
      - ./static:/app/server_app/static        # Стандартная статическая страница 
    environment:
      - PORT=${PORT}         # порт Node.js
      - DOMAIN=${DOMAIN}     # домен для сертификата
    command: /bin/sh -c "envsubst < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    depends_on:
      - app
    networks: 
      - webnet

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: >
      /bin/sh -c "trap exit TERM; while :; do
        certbot renew --webroot -w /var/www/certbot;
        docker exec nginx_proxy nginx -s reload;
        sleep 12h;
      done"
    depends_on:
      - nginx
    networks:
      - webnet


networks:
  webnet:
    driver: bridge